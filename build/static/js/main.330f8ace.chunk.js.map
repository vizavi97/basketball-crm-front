{"version":3,"sources":["config/ui/Block.tsx","config/app.config.ts","pages/private/request/CreateRequest.tsx","pages/private/Main.tsx","components/layout/cabinet/Link.tsx","components/layout/cabinet/RouterLinks.tsx","assets/images/logo.png","components/layout/cabinet/SideBar.tsx","components/layout/cabinet/TopBar.tsx","components/layout/cabinet/CabinetLayout.tsx","pages/private/staff/PlayerCard.tsx","components/ui/skeleton/SkeletonStack.tsx","pages/private/staff/CreatePlayer.tsx","pages/private/staff/Staff.tsx","pages/private/team/TeamsCard.tsx","pages/private/team/CreateTeam.tsx","pages/private/team/Teams.tsx","pages/private/settings/Settings.tsx","pages/private/sport-section/CreateSection.tsx","pages/private/sport-section/SportSection.tsx","components/PreLoader.tsx","store/types/user.types.ts","App.tsx","store/actions/user.action.ts","config/ChakraConfig.ts","store/types/app.types.ts","store/reducers/app.reducer.ts","store/reducers/user.reducer.ts","store/reducers/root.reducer.ts","index.tsx"],"names":["Block","props","variant","children","rest","styles","useStyleConfig","__css","BACKEND_API_URL","CreateRequest","title","id","date","console","log","useState","disable","name","surname","fatherName","gameNumber","birth","Date","toLocaleDateString","nationality","placeOfBirth","height","position","age","teamId","form","setForm","inputHandler","event","target","value","state","py","maxW","md","xs","as","fontWeight","textAlign","fontSize","onSubmit","preventDefault","p","mb","onChange","placeholder","size","px","isDisabled","required","_disabled","cursor","justifyContent","alignItems","colorScheme","type","mx","Main","loading","setLoading","events","setEvents","chooseEvent","setChooseEvent","sendRequest","setSendRequest","useEffect","axios","get","then","resp","result","data","map","item","Number","color","replace","from","to","getTime","catch","error","w","h","top","left","thickness","speed","emptyColor","onClickEvent","filteredEvent","filter","Link","path","pathname","useHistory","location","iconColor","useColorMode","colorMode","RouterLink","d","_focus","_hover","fill","sx","pl","RouterLinks","xmlns","version","x","y","width","viewBox","SideBar","flexDirection","letterSpacing","src","logo","withRouter","history","useDisclosure","isOpen","onOpen","onClose","listen","toggleColorMode","mr","lg","flex","onClick","data-name","transform","rx","Moon","Sun","placement","isActive","Button","base","borderRadius","rightIcon","ChevronDown","right","alert","bg","CabinetLayout","className","zIndex","minH","paddingLeft","overflowX","pt","PlayerCard","icon","number","colSpan","boxShadow","transition","objectFit","objectPosition","maxH","pb","SkeletonStack","length","arr","Array","_","key","padding","mt","noOfLines","spacing","CreatePlayer","image","imageList","maxNumber","onImageUpload","onImageRemoveAll","isDragging","dragProps","index","border","dataURL","Staff","create","setCreate","prevState","templateColumns","gap","TeamsCard","genderArr","gender","typeArr","CreateTeam","address","Teams","Settings","docs_education","docs__one","docs__two","docs__three","imageUploaderHandler","CreateSportSection","SportSection","PreLoader","isIndeterminate","LOADING_USER","REGISTER_USER","LOGIN_USER","ME_QUERY","LOGOUT_USER","CHANGE_USER_PROFILE","App","toast","useToast","useSelector","user","loader","message","renderCounter","dispatch","useDispatch","a","payload","localStorage","getItem","headers","token","description","status","duration","isClosable","exact","component","baseStyle","background","mode","variants","empty","rounded","overflow","smooth","defaultProps","chakraTheme","extendTheme","global","body","fontFamily","lineHeight","fonts","heading","components","APP_CHANGE_LANGUAGE","initialState","activeLang","languages","lang","rootReducer","combineReducers","app","action","store","createStore","compose","applyMiddleware","thunk","composeWithDevTools","wrapper","theme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.330f8ace.chunk.js","sourcesContent":["import {Box, useStyleConfig} from \"@chakra-ui/react\"\r\n\r\nexport const Block = (props: any) => {\r\n    const {variant, children, ...rest} = props\r\n    const styles = useStyleConfig(\"Block\", {variant});\r\n    // Pass the computed styles into the `__css` prop\r\n    return <Box __css={styles} {...rest} >{children}</Box>\r\n}","export const BACKEND_URL = \"https://www.uzbekistan.basketball/\"\r\nexport const BACKEND_API_URL = \"https://www.uzbekistan.basketball/api/\"","import React, {ChangeEvent, FormEvent, useState} from 'react'\nimport {Block} from \"../../../config/ui/Block\";\nimport {Box, Button, Flex, Input, Text} from \"@chakra-ui/react\";\nimport {ImageListType} from \"react-images-uploading\";\nimport 'react-datepicker/dist/react-datepicker.css'\nimport DatePicker from \"react-datepicker/dist/react-datepicker\";\n\ninterface CreatePlayerFormInterface {\n    name: string\n    surname: string\n    fatherName: string\n    gameNumber: number\n    birth: string | number | readonly string[] | undefined\n    nationality: string\n    placeOfBirth: string\n    height: number\n    position: string\n    age: number\n    teamId: number\n}\nexport  interface CreateRequestInterface {\n    title: string,\n    id: number,\n    date: string | Date\n}\nexport const CreateRequest: React.FC<CreateRequestInterface> = ({title,id,date}) => {\n    console.log(id,title)\n    const [disable] = useState<boolean>(false)\n    const [form, setForm] = useState<CreatePlayerFormInterface>({\n        name: \"\",\n        surname: \"\",\n        fatherName: \"\",\n        gameNumber: 0,\n        birth: new Date().toLocaleDateString(),\n        nationality: \"\",\n        placeOfBirth: \"\",\n        height: 170,\n        position: '',\n        age: 18,\n        teamId: 0,\n    })\n    const dateHandler = (date) =>  setForm( state => ({ ...state,birth:  new Date(date).toLocaleDateString()}));\n\n    const inputHandler = (event: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const {name, value} = event.target\n        setForm(state => ({\n            ...state,\n            [name]: value\n        }))\n    }\n    const submitHandler = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        console.log('submitHandler')\n    }\n    return (\n        <>\n            <Block py={6} maxW={{md: \"540ox\", xs: \"100%\"}}>\n                <Text as={'h2'} fontWeight={600} textAlign={\"center\"} fontSize={\"2rem\"}>Оформление заявки</Text>\n                <Text as={'h5'} fontWeight={600} textAlign={\"center\"} fontSize={\"1.375rem\"}>{title} - {date}</Text>\n                <form onSubmit={submitHandler}>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Имя\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.name}\n                            name='name'\n                            onChange={inputHandler}\n                            placeholder=\"Введите Имя игрока\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Фамилия игрока\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.surname}\n                            name='surname'\n                            onChange={inputHandler}\n                            placeholder=\"Введите Фамилию игрока\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Отчество\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.fatherName}\n                            name='fatherName'\n                            onChange={inputHandler}\n                            placeholder=\"Введите Отчетсво игрока\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Игровой\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.gameNumber}\n                            name='gameNumber'\n                            onChange={inputHandler}\n                            placeholder=\"Введите Игровой номер игрока\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n                    <Flex justifyContent={\"center\"} alignItems={\"center\"}>\n\n                        <Button variant={\"outline\"}\n                                colorScheme={\"teal\"}\n                                isDisabled={disable}\n                                type={\"submit\"}\n                                mx={2}\n                        >\n                            Подтвердить</Button>\n                        <Button variant={\"outline\"}\n                                colorScheme={\"red\"}\n                                isDisabled={disable}\n                                type={\"reset\"}\n                                mx={2}\n                        >\n                            Сбросить</Button>\n                    </Flex>\n                </form>\n            </Block>\n        </>\n    )\n}\n","import React, {useEffect, useState} from 'react'\nimport {Block} from \"../../config/ui/Block\";\nimport Calendar from 'react-awesome-calendar';\nimport {Box, Flex, Spinner} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport {BACKEND_API_URL} from \"../../config/app.config\";\nimport {CreateRequest, CreateRequestInterface} from \"./request/CreateRequest\";\n\n\ninterface MainInterface {\n}\n\ninterface EventInterface {\n    id: number,\n    color: string,\n    title: string,\n    from: string | Date,\n    to: string | Date\n}\n\nexport const Main: React.FC<MainInterface> = () => {\n    const [loading, setLoading] = useState<boolean>(true);\n    const [events, setEvents] = useState<EventInterface[] | []>([])\n    const [chooseEvent, setChooseEvent] = useState<null | CreateRequestInterface>(null)\n    const [sendRequest, setSendRequest] = useState(false)\n\n    const eventHandler = (event: number) => {\n        const filteredEvent = events.filter((item:EventInterface) => item.id === event)[0]\n        setChooseEvent(() => ({\n            id: filteredEvent.id,\n            title: filteredEvent.title,\n            date: filteredEvent.from\n        }))\n        setSendRequest(true)\n    }\n\n    useEffect(() => {\n        axios.get(`${BACKEND_API_URL}calendar`)\n            .then(resp => {\n                const result = resp.data.map((item: any) => ({\n                    id: Number(item.id),\n                    color: '#3694DF',\n                    title: item.event.replace(/<\\/?[^>]+(>|$)/g, \"\"),\n                    from: item.date,\n                    to: new Date(new Date(item.date).getTime() + 3600 * 2 * 1000)\n                }))\n                setEvents(() => result)\n                setLoading(() => false)\n            })\n            .catch(error => console.log(error))\n    }, [])\n    if (loading) {\n        return (\n            <Block>\n                <Box py={4} px={8}>\n                    <Flex w={\"100%\"}\n                          h={\"100vh\"}\n                          position={\"fixed\"}\n                          top={0}\n                          left={0}\n                          justifyContent={\"center\"}\n                          alignItems={\"center\"}\n                    >\n                        <Spinner thickness=\"4px\"\n                                 speed=\"0.65s\"\n                                 emptyColor=\"gray.200\"\n                                 color=\"teal\"\n                                 size=\"xl\"/>\n                    </Flex>\n                </Box>\n            </Block>\n        )\n    }\n    if (sendRequest && chooseEvent) {\n        return (\n            <CreateRequest id={chooseEvent.id} title={chooseEvent.title} date={chooseEvent.date}/>\n        )\n    }\n    return (\n        <>\n            <Block>\n                <Box py={4} px={8}>\n                    <Calendar\n                        events={events}\n                        onClickEvent={eventHandler}\n                    />\n                </Box>\n            </Block>\n        </>\n    )\n}\n","import React from 'react'\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {Box, Text, Link as ChakraLink, useColorMode} from \"@chakra-ui/react\";\n\ninterface LinkInterface {\n    name: string\n    path: string\n}\n\nexport const Link: React.FC<LinkInterface> = ({\n                                                  name,\n                                                  path,\n                                                  children\n                                              }) => {\n    const history = useHistory()\n    const pathname = history.location.pathname;\n    const {colorMode} = useColorMode();\n    const iconColor = colorMode === 'light' ? \"#1c283b\" : \"#fff\"\n    return (\n        <>\n            <ChakraLink as={RouterLink} to={path}\n                  px={'1.25rem'}\n                  d='flex'\n                  alignItems='center'\n                  py='.875rem'\n                  _focus={{}}\n                        _hover={{\n                            color: '#e41e23',\n                            \"& path\": {fill: '#e41e23!important'}\n                        }}\n                        sx={{\n                            color: pathname === path ? \"#e41e23\" : iconColor,\n                            \"& path\": {fill: pathname === path ? \"#e41e23\" : iconColor}\n                        }}\n            >\n                <Box w={5}>\n                    {children}\n                </Box>\n                <Text pl={'1rem'}>{name}</Text>\n            </ChakraLink>\n        </>\n    )\n}\n","import React from 'react'\r\nimport {Box, useColorMode} from '@chakra-ui/react';\r\nimport {Block} from \"../../../config/ui/Block\";\r\nimport {Link} from \"./Link\";\r\n\r\nexport const RouterLinks: React.FC = () => {\r\n    const {colorMode} = useColorMode();\r\n    const iconColor = colorMode === 'light' ? \"#1C273C\" : \"#fff\"\r\n    return (\r\n        <Block variant={'empty'} w={'100%'}>\r\n            <Link path={'/'} name={'Кабинет'}>\r\n                <Box w={5}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"\r\n                         id=\"Capa_1\" x=\"0px\" y=\"0px\" width=\"20\" height=\"20\" viewBox=\"0 0 958 958\"\r\n                    >\r\n                        <path\r\n                            fill={iconColor}\r\n                            d=\"M755.8,482.6c-17.5-17.5-37.9-31.299-60.6-40.9c-23.5-10-48.5-15-74.2-15h-14.601c-1.899-4.1-4.1-8.1-6.5-12.1    c-0.199-0.4-2-3.2-3.3-3.8c-1.3-0.5-4.399-0.2-5.7,1.399c-0.699,0.9-0.399,3.2-0.1,4.601c0.6,3.3,1.3,6.6,1.9,9.899    c1.199,6.4,2.399,12.7,2.5,19.101c0.1,2.5,0,5-0.301,7.5c-0.1,1.1-0.3,2.3-0.5,3.5c-0.8,4.2-2.199,8.399-4.5,12.8    c-0.5,0.9-1,1.9-1.6,2.9c-2.3,3.1-4.9,6.5-7.8,10.099c-16.9,20.701-46,49.301-92.2,77.6c-1,0.602-1.899,1.201-2.899,1.801    s-2.101,1.301-3.2,2c-1.3,0.801-2.601,1.699-3.8,2.6c-0.7,0.5-1.4,1-2.101,1.5c-2,1.5-3.899,3.1-5.6,4.701    c-1.2,1.199-2.101,2.6-2.8,4.1c-1.5,3.299-1.801,7.199-1.801,10.9c0,0.299,0,0.6,0,0.898c0,0.5,0,1,0,1.5    c0,1.102,0.101,3.4,0.101,6.602c0,2.199,0,4.898,0,7.898c0.1,23,0,65.801,0,85.301c0,6.1,0,12.301,0,18.4    c0,5.699,4.2,10.299,9.399,10.299h7.801c5.199,0,9.399-4.6,9.399-10.299c0,0,0-109.6,0-109.801c0-5,2.2-8.699,5.4-11.699    c3.399-3.201,7.8-5.701,11.8-7.9c7.9-4.4,16.8-9.699,26.1-15.5c14.8-9.301,30.7-20.199,45.3-32.1c2.101-1.701,4.9-2.9,7.9-3.5    c0.2-0.1,0.5-0.1,0.8-0.1c0.5-0.102,1.101-0.102,1.601-0.102c2.899,0,6.5,0.801,9.899,1.701c2.101,0.6,4.101,1.199,5.8,1.799    l9.2,3c3.8,1.201,9,3.201,12.2,3.201c1.2,0,2.2-0.301,2.7-1l0,0c1.3-0.801,2-2.301,1.4-4.301c-6-17.699-8.801-36.4-12.301-54.9    c-1-5.1-2-10.1-3.1-15.1c-0.4-1.7-0.8-3.3-1.2-5h4.5c88.8,0,160.7,72,160.7,160.701V862.1c0,44.4-151.2,66.6-302.4,66.6    C327.9,928.699,176.7,906.5,176.7,862.1V617.4c0-88.801,72-160.701,160.7-160.701h5.8c-0.5,2.101-1,4.2-1.4,6.301    c-1,4.699-2,9.5-2.8,14.3c-3,16.2-5.6,32.5-10.4,48.2l-1.8,4.801c-1.7,4.199-0.5,7,2.8,7c0.7,0,1.601-0.102,2.5-0.4l24.601-8    l3.6-1.201c1.3-0.398,2.8-0.6,4.4-0.6c1.2,0,2.399,0.1,3.6,0.301c3.2,0.6,6.3,1.9,8.5,3.699c14.5,11.9,30.3,22.701,45,32    C432.7,570,443.1,576,451.9,580.9c0.3-2.201,0.699-4.5,1.399-6.801c1.101-3.4,2.8-6.9,5.601-10c0.5-0.5,0.899-1,1.399-1.6    c1.3-1.301,2.7-2.6,4.3-3.9c-43.5-27.6-70.6-56.1-86.5-76.5c-3.5-4.5-6.5-8.599-9-12.299c-0.199-0.3-0.3-0.7-0.5-1    c-1.8-4.101-2.899-8.101-3.5-12.101c-0.199-1.1-0.3-2.199-0.399-3.399c-0.2-2.5-0.3-5-0.2-7.5c0.2-6.4,1.3-12.8,2.5-19.2    c0.7-3.7,1.4-7.3,2.1-10.9c0.2-1.399-0.199-2.6-0.899-3.5c-1.3-1.6-4.4-2-5.601-1.5C361.9,411,361.2,411.5,360.7,412.3    c-0.7,1.1-1.4,2.2-2,3.3c-2.101,3.6-3.9,7.2-5.601,10.9H337.4c-25.7,0-50.7,5-74.2,15c-22.7,9.6-43.1,23.399-60.6,40.9    c-17.5,17.5-31.3,37.9-40.9,60.6c-10,23.5-15,48.5-15,74.199V861.5c0,9,2.5,22.6,14.6,35.801c6.9,7.6,16,14.1,27.9,20.1    c18.4,9.299,44.1,17.199,76.2,23.4C322.1,951.9,398,958,479,958s157-6.1,213.6-17.199c32.2-6.301,57.801-14.201,76.2-23.4    c11.9-6,21-12.5,27.9-20.1C808.8,884,811.3,870.5,811.3,861.5V617.4c0-25.701-5-50.701-15-74.201    C787.1,520.5,773.3,500.1,755.8,482.6z\"/>\r\n                        <path\r\n                            fill={iconColor}\r\n                            d=\"M321,305c3.8,9,7,18.9,13.3,26.4c4.4,5.3,11.3,9,18.2,10.1c16,25.6,27.7,55.1,29.8,85.2c0.5,6.9,0.4,13.801-0.2,20.801    c-0.3,3.1-0.6,6.199-0.899,9.199c-0.2,1.5-0.301,3-0.5,4.5c14.5,21.4,43.8,55.9,96.8,88.5c0.1-0.1,0.2-0.1,0.2-0.199    c28.399-17.1,53.1-36.1,73.399-56.4c12.601-12.5,21.101-23.299,26.601-31c-0.2-1.8-0.4-3.6-0.601-5.4    c-0.3-3.1-0.6-6.1-0.899-9.199c-0.601-6.9-0.601-13.9-0.2-20.801c2.1-30,13.8-59.6,29.8-85.2c6.9-1,13.8-4.8,18.2-10.1    c6.3-7.6,9.5-17.5,13.3-26.4c4.8-11.5,9.8-22.9,14.4-34.4c7.1-17.8,10.699-40.3-5.7-54.3c-4.5-3.8-10.5-5.7-16.3-5.7    c-0.101,0-0.301,0-0.4,0l0,0c-0.7,0-1.4-1-2.1-2.6c0.199-28,2.699-57.4-1.2-85c-2.3-16.6-7.8-32.7-14.8-47.9    c-16.2-34.9-42.9-56-79.7-67C514.399,3,496.7,0.2,479.2,0c-0.101,0-0.2,0-0.301,0c-0.1,0-0.199,0-0.3,0c-17.5,0.2-35.1,3-52.3,8.1    c-36.8,11-63.4,32.1-79.7,67c-7.1,15.2-12.5,31.2-14.8,47.9c-3.9,27.6-1.4,57-1.2,85c-0.7,1.6-1.399,2.6-2.1,2.6l0,0    c-0.101,0-0.3,0-0.4,0c-5.899,0-11.8,1.9-16.3,5.7c-16.5,14-12.8,36.5-5.7,54.3C311.2,282.2,316.2,293.6,321,305z\"/>\r\n\r\n\r\n                    </svg>\r\n                </Box>\r\n            </Link>\r\n            <Link path={'/teams'} name={'Команды'}>\r\n                <Box w={5}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"\r\n                         id=\"Capa_1\" x=\"0px\" y=\"0px\" width=\"20\" height=\"20\" viewBox=\"0 0 799.254 799.255\">\r\n                        <path\r\n                            fill={iconColor}\r\n                            d=\"M183.02,86.234l17.56,20.408c4.307-4.087,41.694-40.962,29.886-73.21C222.219,10.936,194.601,0,146.008,0   c-35.174,0-51.406,16.669-58.83,30.658c-32.273,60.755,37.1,188.535,59.12,226.243c47.038,80.531,117.255,124.266,136.359,135.109   c3.674,12.029,4.606,24.755,2.443,27.125c-0.036,0.037-4.651,2.431-20.513-4.726l-10.328,25.319   c10.814,4.884,20.271,7.317,28.336,7.317c8.498,0,15.428-2.718,20.732-8.139c9.3-9.526,10.019-24.452,8.264-37.383   c5.894,6.271,11.826,10.841,17.69,13.704c45.808,22.39,45.808,122.265,45.808,122.265l-34.354,20.662l24.539,27.553   c-13.089,161.87-85.07,179.09-85.07,179.09v34.457h112.881h8.178h112.881v-34.453c0,0-71.979-17.22-85.066-179.09l24.537-27.553   l-34.354-20.662c0,0,0-99.875,45.809-122.263c7.91-3.865,15.951-10.819,23.844-20.89c-2.962,14.172-4.072,33.205,7.014,44.564   c5.313,5.421,12.241,8.139,20.729,8.139c8.053,0,17.523-2.436,28.339-7.316l-10.313-25.32c-15.85,7.156-20.478,4.75-20.501,4.75   c-2.175-2.396-1.331-14.881,2.44-27.149c19.105-10.855,89.311-54.592,136.332-135.109c22.03-37.708,91.405-165.488,59.12-226.243   c-7.412-13.989-23.654-30.658-58.817-30.658c-48.593,0-76.223,10.936-84.454,33.432c-11.811,32.248,25.562,69.123,29.871,73.21   l17.561-20.42c-10.01-9.539-27.031-31.899-23.008-42.891c2.803-7.625,20.027-15.78,60.03-15.78   c27.198,0,33.806,12.458,35.979,16.548c16.318,30.728-7.223,110.453-58.576,198.379   c-41.713,71.412-104.915,112.544-124.442,124.074c30.366-59.621,54.841-170.632,54.841-335.325H401.263h-8.178H233.298   c0,160.83,23.338,270.464,52.71,331.042c-24.782-15.609-79.706-55.244-117.405-119.791   c-51.352-87.926-74.898-167.652-58.588-198.379c2.171-4.091,8.791-16.548,35.992-16.548c39.977,0,57.219,8.155,60.016,15.78   C209.73,53.381,195.035,74.707,183.02,86.234z\"/>\r\n                    </svg>\r\n                </Box>\r\n            </Link>\r\n            <Link path={'/staff'} name={'Состав'}>\r\n                <Box w={5}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_3\" height=\"20\"\r\n                         viewBox=\"0 0 64 64\" width=\"20\"\r\n                    >\r\n                        <path\r\n                            fill={iconColor}\r\n                            d=\"m57.252 48.121-4.912-.893c1.428-1.058 2.53-2.524 3.135-4.228h.525c2.206 0 4-1.794 4-4s-1.794-4-4-4v-5c0-2.757-2.243-5-5-5h-8c-2.757 0-5 2.243-5 5v5c-2.206 0-4 1.794-4 4s1.794 4 4 4h.525c.605 1.704 1.707 3.17 3.135 4.228l-4.912.893c-2.046.371-3.74 1.611-4.748 3.294-1.008-1.683-2.702-2.923-4.748-3.294l-4.912-.893c1.428-1.058 2.53-2.524 3.135-4.228h.525c2.206 0 4-1.794 4-4s-1.794-4-4-4v-5c0-2.757-2.243-5-5-5h-8c-2.757 0-5 2.243-5 5v5c-2.206 0-4 1.794-4 4s1.794 4 4 4h.525c.605 1.704 1.707 3.17 3.135 4.228l-4.912.893c-3.331.605-5.748 3.501-5.748 6.887v6.992c0 .553.447 1 1 1h30 30c.553 0 1-.447 1-1v-6.992c0-3.386-2.417-6.282-5.748-6.887zm-3.08 8.465.242.242c.372.372.586.888.586 1.414v2.758h-16v-2.758c0-.526.214-1.042.586-1.414l.242-.242c.745-.744 1.172-1.775 1.172-2.828v-4.378l1.153-.21c.53 2.192 2.495 3.83 4.847 3.83s4.317-1.638 4.847-3.83l1.153.21v4.378c0 1.053.427 2.084 1.172 2.828zm-4.356-7.586c-.414 1.161-1.514 2-2.816 2s-2.402-.839-2.816-2zm8.184-10c0 1.103-.897 2-2 2h-.059c.037-.329.059-.662.059-1v-3c1.103 0 2 .897 2 2zm-15-12h8c1.654 0 3 1.346 3 3v6.722c-.595-.347-1-.985-1-1.722v-.573c0-1.89-1.537-3.427-3.427-3.427-.528 0-1.059.125-1.533.361l-1.04.521-1.041-.521c-.474-.236-1.004-.361-1.532-.361-1.89 0-3.427 1.537-3.427 3.427v.573c0 .737-.405 1.375-1 1.722v-6.722c0-1.654 1.346-3 3-3zm-5 14c-1.103 0-2-.897-2-2s.897-2 2-2v3c0 .338.022.671.059 1zm2-1v-1.142c1.721-.447 3-1.999 3-3.858v-.573c0-.787.64-1.427 1.427-1.427.221 0 .441.052.639.15l1.487.744c.281.141.613.141.895 0l1.486-.744c.198-.099.419-.15.64-.15.786 0 1.426.64 1.426 1.427v.573c0 1.859 1.279 3.411 3 3.858v1.142c0 3.859-3.141 7-7 7s-7-3.141-7-7zm-9 15.008v5.992h-4v-2.758c0-1.053-.427-2.084-1.172-2.828l-.242-.242c-.372-.372-.586-.888-.586-1.414v-4.014l1.895.344c2.378.433 4.105 2.502 4.105 4.92zm-21.172 1.578c.745-.744 1.172-1.775 1.172-2.828v-4.378l1.153-.21c.53 2.192 2.495 3.83 4.847 3.83s4.317-1.638 4.847-3.83l1.153.21v4.378c0 1.053.427 2.084 1.172 2.828l.242.242c.372.372.586.888.586 1.414v2.758h-16v-2.758c0-.526.214-1.042.586-1.414zm9.988-7.586c-.414 1.161-1.514 2-2.816 2s-2.402-.839-2.816-2zm8.184-10c0 1.103-.897 2-2 2h-.059c.037-.329.059-.662.059-1v-3c1.103 0 2 .897 2 2zm-15-12h8c1.654 0 3 1.346 3 3v6.722c-.595-.347-1-.985-1-1.722v-.573c0-1.89-1.537-3.427-3.427-3.427-.528 0-1.059.125-1.533.361l-1.04.521-1.041-.521c-.474-.236-1.004-.361-1.532-.361-1.89 0-3.427 1.537-3.427 3.427v.573c0 .737-.405 1.375-1 1.722v-6.722c0-1.654 1.346-3 3-3zm-5 14c-1.103 0-2-.897-2-2s.897-2 2-2v3c0 .338.022.671.059 1zm2-1v-1.142c1.721-.447 3-1.999 3-3.858v-.573c0-.787.64-1.427 1.427-1.427.221 0 .441.052.639.15l1.487.744c.281.141.613.141.895 0l1.486-.744c.198-.099.419-.15.64-.15.786 0 1.426.64 1.426 1.427v.573c0 1.859 1.279 3.411 3 3.858v1.142c0 3.859-3.141 7-7 7s-7-3.141-7-7zm-7 15.008c0-2.418 1.727-4.487 4.105-4.92l1.895-.345v4.014c0 .526-.214 1.042-.586 1.414l-.242.242c-.745.745-1.172 1.776-1.172 2.829v2.758h-4zm30 0c0-2.418 1.727-4.487 4.105-4.92l1.895-.345v4.014c0 .526-.214 1.042-.586 1.414l-.242.242c-.745.745-1.172 1.776-1.172 2.829v2.758h-4zm28 5.992h-4v-2.758c0-1.053-.427-2.084-1.172-2.828l-.242-.242c-.372-.372-.586-.888-.586-1.414v-4.014l1.895.344c2.378.433 4.105 2.502 4.105 4.92z\"/>\r\n                        <path\r\n                            fill={iconColor}\r\n                            d=\"m32 27c7.168 0 13-5.832 13-13s-5.832-13-13-13-13 5.832-13 13 5.832 13 13 13zm-9.787-8.003c1.015-1.478 2.219-2.8 3.57-3.94 2.24 4.062 5.79 7.348 10.123 9.213-1.216.465-2.529.73-3.906.73-4.265 0-7.963-2.445-9.787-6.003zm16.048 4.036-.095-.031c-4.684-1.562-8.519-4.911-10.779-9.162.991-.68 2.041-1.271 3.137-1.764.637 1.29 1.816 2.289 3.324 2.666 2.836.71 5.212 2.616 6.52 5.23l.353.705c-.695.906-1.522 1.704-2.46 2.356zm3.675-4.344c-1.606-2.933-4.348-5.073-7.663-5.901-.823-.206-1.49-.74-1.884-1.439 1.626-.545 3.326-.892 5.063-1l4.803-.3c.474 1.228.745 2.557.745 3.951 0 1.679-.389 3.264-1.064 4.689zm-.664-10.583-3.946.247c-1.824.113-3.611.465-5.326 1.018v-.23c0-1.005.499-1.938 1.336-2.496l3.653-2.435c1.752.895 3.23 2.245 4.283 3.896zm-6.591-4.762-2.454 1.636c-1.395.93-2.227 2.485-2.227 4.161v.736c0 .079.016.154.02.232-1.214.524-2.378 1.157-3.479 1.887-.576-1.435-.991-2.944-1.199-4.508l-.27-2.02c1.892-1.541 4.303-2.468 6.928-2.468.926 0 1.821.128 2.681.344zm-11.383 3.953.061.454c.254 1.905.776 3.739 1.519 5.465-1.295 1.043-2.474 2.235-3.51 3.557-.232-.887-.368-1.814-.368-2.773 0-2.524.863-4.845 2.298-6.703z\"/>\r\n                    </svg>\r\n                </Box>\r\n            </Link>\r\n            <Link path={'/sport-section'} name={'Спортивные секции'}>\r\n                <Box w={5}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\"\r\n                         viewBox=\"0 0 24 24\" width=\"20\">\r\n                        <path\r\n                            fill={iconColor}\r\n                            d=\"m22.5 24h-8c-.827 0-1.5-.673-1.5-1.5v-8c0-.827.673-1.5 1.5-1.5h8c.827 0 1.5.673 1.5 1.5v8c0 .827-.673 1.5-1.5 1.5zm-8-10c-.275 0-.5.224-.5.5v8c0 .276.225.5.5.5h8c.275 0 .5-.224.5-.5v-8c0-.276-.225-.5-.5-.5z\"/>\r\n                        <path\r\n                            fill={iconColor}\r\n                            d=\"m9.5 24h-8c-.827 0-1.5-.673-1.5-1.5v-21c0-.827.673-1.5 1.5-1.5h8c.827 0 1.5.673 1.5 1.5v21c0 .827-.673 1.5-1.5 1.5zm-8-23c-.275 0-.5.224-.5.5v21c0 .276.225.5.5.5h8c.275 0 .5-.224.5-.5v-21c0-.276-.225-.5-.5-.5z\"/>\r\n                        <path\r\n                            fill={iconColor}\r\n                            d=\"m22.5 11h-8c-.827 0-1.5-.673-1.5-1.5v-8c0-.827.673-1.5 1.5-1.5h8c.827 0 1.5.673 1.5 1.5v8c0 .827-.673 1.5-1.5 1.5zm-8-10c-.275 0-.5.224-.5.5v8c0 .276.225.5.5.5h8c.275 0 .5-.224.5-.5v-8c0-.276-.225-.5-.5-.5z\"/>\r\n                    </svg>\r\n                </Box>\r\n            </Link>\r\n            <Link path={'/settings'} name={'Настройки'}>\r\n                <Box w={5}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" viewBox=\"0 0 569 569.54905\" width=\"20\">\r\n                        <path\r\n                            fill={iconColor}\r\n                            d=\"m1.527344 52.246094 37.984375 66.46875c1.28125 2.246094 3.425781 3.871094 5.933593 4.5l35.4375 8.859375 121.542969 121.542969 13.429688-13.425782-123.445313-123.441406c-1.214844-1.21875-2.738281-2.082031-4.40625-2.5l-34.050781-8.542969-32.339844-56.625 27.726563-27.726562 56.648437 32.371093 8.546875 34.050782c.414063 1.671875 1.28125 3.199218 2.496094 4.414062l123.445312 123.445313 13.425782-13.429688-121.542969-121.542969-8.859375-35.417968c-.628906-2.511719-2.253906-4.660156-4.5-5.945313l-66.472656-37.980469c-3.707032-2.109374-8.371094-1.484374-11.394532 1.527344l-37.980468 37.984375c-3.0546878 3.003907-3.71875 7.675781-1.625 11.414063zm0 0\"/>\r\n                        <path\r\n                            fill={iconColor}\r\n                            d=\"m396.3125 187.144531-208.902344 208.90625-13.429687-13.429687 208.90625-208.902344zm0 0\"/>\r\n                        <path\r\n                            fill={iconColor}\r\n                            d=\"m150.847656 403.441406c-1.71875-2.859375-4.804687-4.605468-8.140625-4.605468h-56.972656c-3.332031 0-6.421875 1.746093-8.136719 4.605468l-28.488281 47.476563c-1.808594 3.007812-1.808594 6.769531 0 9.78125l28.488281 47.476562c1.714844 2.855469 4.804688 4.605469 8.136719 4.605469h56.972656c3.335938 0 6.421875-1.75 8.140625-4.605469l28.484375-47.476562c1.808594-3.011719 1.808594-6.773438 0-9.78125zm-13.511718 90.347656h-46.226563l-22.789063-37.980468 22.789063-37.984375h46.226563l22.789062 37.984375zm0 0\"/>\r\n                        <path\r\n                            fill={iconColor}\r\n                            d=\"m456.0625 227.914062c62.714844.210938 113.730469-50.460937 113.941406-113.175781.03125-9.546875-1.140625-19.054687-3.488281-28.308593-1.265625-5.089844-6.417969-8.1875-11.507813-6.921876-1.671874.417969-3.195312 1.28125-4.414062 2.496094l-59.109375 59.070313-46.898437-15.628907-15.640626-46.886718 59.109376-59.121094c3.707031-3.710938 3.703124-9.722656-.007813-13.429688-1.222656-1.222656-2.761719-2.089843-4.445313-2.503906-60.820312-15.402344-122.605468 21.414063-138.007812 82.230469-2.339844 9.226563-3.507812 18.710937-3.476562 28.230469.023437 7.476562.792968 14.929687 2.308593 22.25l-207.957031 207.953125c-7.320312-1.511719-14.773438-2.28125-22.246094-2.308594-62.933594 0-113.949218 51.015625-113.949218 113.949219 0 62.929687 51.015624 113.945312 113.949218 113.945312 62.929688 0 113.945313-51.015625 113.945313-113.945312-.023438-7.476563-.796875-14.929688-2.308594-22.25l49.785156-49.785156 21.773438 21.773437c3.710937 3.707031 9.71875 3.707031 13.429687 0l4.746094-4.75c4.164062-4.136719 10.894531-4.136719 15.058594 0 4.160156 4.148437 4.167968 10.882813.019531 15.042969-.003906.003906-.011719.011718-.019531.019531l-4.746094 4.746094c-3.707031 3.707031-3.707031 9.71875 0 13.425781l113.273438 113.273438c29.792968 30.066406 78.316406 30.285156 108.382812.492187 30.0625-29.792969 30.28125-78.320313.488281-108.382813-.160156-.164062-.324219-.328124-.488281-.492187l-113.273438-113.269531c-3.707031-3.707032-9.71875-3.707032-13.425781 0l-4.746093 4.746094c-4.167969 4.140624-10.894532 4.140624-15.0625 0-4.15625-4.148438-4.167969-10.882813-.019532-15.039063.007813-.007813.015625-.011719.019532-.019531l4.75-4.75c3.707031-3.707032 3.707031-9.71875 0-13.425782l-21.773438-21.773437 49.785156-49.785156c7.320313 1.511719 14.773438 2.285156 22.246094 2.308593zm37.308594 322.851563c-6.898438-.011719-13.738282-1.257813-20.195313-3.683594l74.160157-74.164062c11.191406 29.769531-3.867188 62.972656-33.636719 74.164062-6.496094 2.441407-13.382813 3.691407-20.328125 3.683594zm-107.574219-246.792969c-10.515625 12.542969-8.867187 31.238282 3.675781 41.75 11.023438 9.238282 27.089844 9.230469 38.101563-.027344l106.5625 106.65625c1.15625 1.160157 2.238281 2.382813 3.285156 3.625l-81.1875 81.1875c-1.246094-1.042968-2.46875-2.125-3.628906-3.285156l-106.644531-106.652344c10.515624-12.542968 8.867187-31.238281-3.675782-41.75-11.023437-9.242187-27.09375-9.230468-38.105468.023438l-15.191407-15.191406 81.613281-81.492188zm38.34375-95.503906-215.410156 215.367188c-2.363281 2.359374-3.3125 5.785156-2.507813 9.023437 13.027344 51.160156-17.886718 103.195313-69.050781 116.21875-51.160156 13.027344-103.195313-17.886719-116.222656-69.050781-13.023438-51.160156 17.890625-103.195313 69.054687-116.222656 15.476563-3.9375 31.691406-3.9375 47.167969 0 3.238281.792968 6.65625-.15625 9.023437-2.503907l215.359376-215.371093c2.359374-2.359376 3.308593-5.785157 2.496093-9.019532-12.9375-50.5625 17.5625-102.039062 68.125-114.980468 9.554688-2.441407 19.4375-3.378907 29.28125-2.765626l-50.089843 50.109376c-2.542969 2.539062-3.433594 6.300781-2.296876 9.710937l18.988282 56.976563c.949218 2.832031 3.175781 5.058593 6.011718 6l56.976563 18.992187c3.40625 1.136719 7.167969.25 9.710937-2.289063l50.089844-50.089843c.113282 1.8125.171875 3.605469.171875 5.390625.265625 52.175781-41.8125 94.6875-93.988281 94.957031-8.066406.039063-16.105469-.953125-23.917969-2.953125-3.238281-.808594-6.664062.136719-9.023437 2.496094h.050781zm0 0\"/>\r\n                        <path\r\n                            fill={iconColor}\r\n                            d=\"m491.273438 477.578125-13.429688 13.429687-94.953125-94.953124 13.425781-13.429688zm0 0\"/>\r\n                    </svg>\r\n\r\n                </Box>\r\n            </Link>\r\n        </Block>\r\n    )\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.b9b44c51.png\";","import {Flex, Image, Link} from '@chakra-ui/react';\r\nimport {Link as RouterLink} from 'react-router-dom'\r\nimport React from 'react'\r\nimport {RouterLinks} from \"./RouterLinks\";\r\nimport { Block } from '../../../config/ui/Block';\r\nimport logo from '../../../assets/images/logo.png'\r\n\r\nexport const SideBar: React.FC = () => {\r\n    return (\r\n            <Flex flexDirection='column' w='100%' py={'1.25rem'}>\r\n                <Block variant={'empty'} w={'100%'} mb={\"1.75rem\"}>\r\n                    <Link as={RouterLink}\r\n                          to={'/'}\r\n                          fontWeight={600}\r\n                          fontSize='1.5rem'\r\n                          letterSpacing='3.6px'\r\n                          px={'1.25rem'}\r\n                          d='block'\r\n                          _hover={{\r\n                              color: '#36AB7E'\r\n                          }}\r\n                          _focus={{}}\r\n                    >\r\n                        <Image src={logo}/>\r\n                    </Link>\r\n                </Block>\r\n                <RouterLinks/>\r\n            </Flex>\r\n    )\r\n};\r\n","import {\r\n    Box,\r\n    Button,\r\n    Text,\r\n    Avatar,\r\n    Flex,\r\n    Menu,\r\n    MenuButton,\r\n    MenuItem,\r\n    MenuList,\r\n    Switch,\r\n    useColorMode,\r\n    useDisclosure,\r\n    Drawer,\r\n    DrawerContent,\r\n    DrawerHeader,\r\n    DrawerOverlay,\r\n    DrawerBody,\r\n    DrawerFooter,\r\n    DrawerCloseButton, Image\r\n} from '@chakra-ui/react';\r\nimport {SunIcon, MoonIcon, ChevronDownIcon} from '@chakra-ui/icons'\r\nimport React from 'react'\r\nimport {Block} from \"../../../config/ui/Block\";\r\nimport {RouterLinks} from \"./RouterLinks\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport logo from \"../../../assets/images/logo.png\";\r\n\r\ninterface TopBarInterface {\r\n    history: any\r\n}\r\n\r\nconst TopBar: React.FC<TopBarInterface> = ({history}) => {\r\n    const {isOpen, onOpen, onClose} = useDisclosure()\r\n    history.listen(() => onClose());\r\n    const {colorMode, toggleColorMode} = useColorMode();\r\n    return (\r\n        <>\r\n            <Block>\r\n                <Flex w={'100%'}\r\n                      alignItems='center'\r\n                      justifyContent={\"flex-end\"}\r\n                      h='80px'\r\n                      p={'1.25rem'}\r\n                >\r\n                    {/*mobile open menu btn*/}\r\n                    <Flex mr={4} d={{lg: 'none'}} flex={1}>\r\n                        <Button onClick={onOpen}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"16\" viewBox=\"0 0 24 16\">\r\n                                <g id=\"Гамбургер_меню\" data-name=\"Гамбургер меню\" transform=\"translate(-16 -29)\">\r\n                                    <rect id=\"Линия\" width=\"24\" height=\"2\" rx=\"1\" transform=\"translate(16 29)\"\r\n                                          fill={colorMode === 'dark' ? \"#fff\" : '#6a7187'}/>\r\n                                    <rect id=\"Линия-2\" data-name=\"Линия\" width=\"15\" height=\"2\" rx=\"1\"\r\n                                          transform=\"translate(16 36)\"\r\n                                          fill={colorMode === 'dark' ? \"#fff\" : '#6a7187'}/>\r\n                                    <rect id=\"Линия-3\" data-name=\"Линия\" width=\"24\" height=\"2\" rx=\"1\"\r\n                                          transform=\"translate(16 43)\"\r\n                                          fill={colorMode === 'dark' ? \"#fff\" : '#6a7187'}/>\r\n                                </g>\r\n                            </svg>\r\n                        </Button>\r\n                    </Flex>\r\n                    {/*end*/}\r\n                    <Flex alignItems='center' pl={4}>\r\n                        <Switch colorScheme={'teal'} onChange={() => toggleColorMode()} size=\"lg\"/>\r\n                        <Box px={4}>\r\n                            {colorMode === 'dark' ? <MoonIcon color='#fff'/> : <SunIcon color='#6a7187'/>}\r\n                        </Box>\r\n                        <Menu placement={\"bottom-start\"}>\r\n                            {({isOpen}) => (\r\n                                <>\r\n                                    <MenuButton isActive={isOpen} as={Button}\r\n                                                h={{base: '46px', md: \"auto\"}}\r\n                                                w={{base: '46px', md: \"auto\"}}\r\n                                                borderRadius={{base: '50%', md: '.25rem'}}\r\n                                                px={{base: 0, md: 4}}\r\n                                                py={{base: 0, md: 1}}\r\n                                                rightIcon={<ChevronDownIcon d={{base: \"none\", md: \"block\"}}/>}>\r\n                                        <Flex alignItems={'center'}>\r\n                                            <Avatar h={{base: '48px', md: \"42px\"}} w={{base: '48px', md: \"42px\"}}\r\n                                                    mr={{base: \"0\", md: '1.125rem'}} name=\"Dan Abrahmov\"\r\n                                                    src=\"https://bit.ly/dan-abramov\"/>\r\n                                            <Text d={{base: 'none', md: 'block'}}>Dan Abrahmov</Text>\r\n                                        </Flex>\r\n                                    </MenuButton>\r\n                                    <MenuList right={0}>\r\n                                        <MenuItem>Download</MenuItem>\r\n                                        <MenuItem onClick={() => alert(\"Kagebunshin\")}>Create a Copy</MenuItem>\r\n                                    </MenuList>\r\n                                </>\r\n                            )}\r\n                        </Menu>\r\n                    </Flex>\r\n                </Flex>\r\n            </Block>\r\n            <Drawer\r\n                isOpen={isOpen}\r\n                placement=\"right\"\r\n                onClose={onClose}\r\n            >\r\n                <DrawerOverlay/>\r\n                <DrawerContent\r\n                    bg={colorMode === 'light' ? \"white\" : \"#131722\"}\r\n                    color={colorMode === 'light' ? \"#1c273c\" : \"white\"}>\r\n                    <DrawerCloseButton/>\r\n                    <DrawerHeader><Image src={logo} w={\"90px\"}/></DrawerHeader>\r\n\r\n                    <DrawerBody px={0}>\r\n                        <RouterLinks/>\r\n                    </DrawerBody>\r\n\r\n                    <DrawerFooter>\r\n                        <Button variant=\"outline\" mr={3} onClick={onClose}>\r\n                            Скрыть боковое меню\r\n                        </Button>\r\n                    </DrawerFooter>\r\n                </DrawerContent>\r\n            </Drawer>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default withRouter(TopBar)","import {Box, Flex} from '@chakra-ui/react';\r\nimport React  from 'react'\r\nimport {Block} from '../../../config/ui/Block';\r\nimport {SideBar} from './SideBar';\r\nimport TopBar from './TopBar';\r\n\r\nexport const CabinetLayout: React.FC = ({children}) => {\r\n    return (\r\n        <Flex>\r\n            <Flex\r\n                left='0'\r\n                top='0'\r\n                h='100vh'\r\n                position={\"fixed\"}\r\n                w={'220px'}\r\n                className={'sidebar'}\r\n                d={{base: 'none', lg: \"flex\"}}\r\n                zIndex={2}\r\n            >\r\n                <Block w={\"100%\"}>\r\n                    <SideBar/>\r\n                </Block>\r\n            </Flex>\r\n            <Flex flexDirection={'column'}\r\n                  minH='100vh'\r\n                  flex={1}\r\n                  paddingLeft={{base: '0', lg: \"220px\"}}\r\n                  position={'relative'}\r\n                  overflowX='hidden'\r\n            >\r\n                <TopBar/>\r\n                <Flex flexDirection={'column'} px={'1.25rem'} py={'1.5rem'}>\r\n                    <Box pt={6}>\r\n                        {children}\r\n                    </Box>\r\n                </Flex>\r\n            </Flex>\r\n        </Flex>\r\n    )\r\n};\r\n","import React from 'react'\nimport {Block} from \"../../../config/ui/Block\";\nimport {Box, Button, Flex, GridItem, Image, Text} from \"@chakra-ui/react\";\n\nexport interface PlayerCardInterface {\n    icon: string,\n    name: string,\n    surname: string,\n    number: number | string,\n    position: string\n}\n\nexport const PlayerCard: React.FC<PlayerCardInterface> = ({\n                                                              icon,\n                                                              name,\n                                                              surname,\n                                                              number,\n                                                              position\n                                                          }) => {\n    return (\n        <>\n            <GridItem colSpan={1}>\n                <Block p={2} variant={'rounded'} _hover={{boxShadow: \"0 0 13px 1px #11111130\", transform: \"translateY(-.375rem)\"}}\n                       transition={'all .3s ease'}>\n                    <Flex flexDirection={\"column\"} justifyContent={\"center\"} textAlign={'center'}>\n                        <Image src={icon} title={name + \" \" + surname} objectFit={\"cover\"} objectPosition={\"top\"}\n                               h={'100%'} maxH={\"360px\"}/>\n                        <Box p={4}>\n                            <Text as={'h3'} fontWeight={700}>{name + \" \" + surname}</Text>\n                            <Text>Игровой номер: <Text as={'span'} color={'red.500'} fontWeight={700}\n                                                       fontSize={\"1.125rem\"}>{number}</Text></Text>\n                            <Text>Позиция: {position}</Text>\n                        </Box>\n                        <Flex justifyContent={\"center\"} pb={4}>\n                            <Button colorScheme='red' mx={2}>\n                                Удалить\n                            </Button>\n                            <Button colorScheme='teal' mx={2}>\n                                Изменить\n                            </Button>\n                        </Flex>\n                    </Flex>\n                </Block>\n            </GridItem>\n        </>\n    )\n}\n","import React from 'react'\nimport { SkeletonCircle, SkeletonText} from '@chakra-ui/react'\nimport {Block} from \"../../../config/ui/Block\";\n\ninterface SkeletonStackInterface {\n    length: number,\n}\n\nexport const SkeletonStack: React.FC<SkeletonStackInterface> = ({length}) => {\n    const arr = new Array(length).fill('');\n    return (\n        <>\n            {arr.map((_, key: number) =>\n                    <Block key={key} padding=\"6\" boxShadow=\"lg\">\n                        <SkeletonCircle size=\"10\"/>\n                        <SkeletonText mt=\"4\" noOfLines={4} spacing=\"4\"/>\n                    </Block>\n            )}\n        </>\n    )\n}","import React, {ChangeEvent, FormEvent, useState} from 'react'\nimport {Block} from \"../../../config/ui/Block\";\nimport {Box, Button, Flex, Image, Input, Text} from \"@chakra-ui/react\";\nimport ImageUploading, {ImageListType} from \"react-images-uploading\";\nimport 'react-datepicker/dist/react-datepicker.css'\nimport DatePicker from \"react-datepicker/dist/react-datepicker\";\n\ninterface CreatePlayerFormInterface {\n    name: string\n    surname: string\n    fatherName: string\n    gameNumber: number\n    birth: string | number | readonly string[] | undefined\n    nationality: string\n    placeOfBirth: string\n    height: number\n    position: string\n    age: number\n    image: any\n    teamId: number\n}\n\nexport const CreatePlayer: React.FC = () => {\n    const [disable] = useState<boolean>(false)\n    const [form, setForm] = useState<CreatePlayerFormInterface>({\n        name: \"\",\n        surname: \"\",\n        fatherName: \"\",\n        gameNumber: 0,\n        birth: new Date().toLocaleDateString(),\n        nationality: \"\",\n        placeOfBirth: \"\",\n        height: 170,\n        position: '',\n        age: 18,\n        teamId: 1,\n        image: []\n    })\n    const dateHandler = (date) =>  setForm( state => ({ ...state,birth:  new Date(date).toLocaleDateString()}));\n\n    const inputHandler = (event: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const {name, value} = event.target\n        setForm(state => ({\n            ...state,\n            [name]: value\n        }))\n    }\n    const imageUploaderHandler = (imageList: ImageListType) => setForm(state => ({\n        ...state,\n        image: imageList as never[]\n    }));\n    const submitHandler = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        console.log('submitHandler')\n    }\n    return (\n        <>\n            <Block py={6} maxW={{md: \"540ox\", xs: \"100%\"}}>\n                <Text as={'h2'} fontWeight={600} textAlign={\"center\"} fontSize={\"2rem\"}>Форма Создания игрока</Text>\n                <form onSubmit={submitHandler}>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Имя\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.name}\n                            name='name'\n                            onChange={inputHandler}\n                            placeholder=\"Введите Имя игрока\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Фамилия игрока\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.surname}\n                            name='surname'\n                            onChange={inputHandler}\n                            placeholder=\"Введите Фамилию игрока\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Отчество\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.fatherName}\n                            name='fatherName'\n                            onChange={inputHandler}\n                            placeholder=\"Введите Отчетсво игрока\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Национальность\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.nationality}\n                            name='nationality'\n                            onChange={inputHandler}\n                            placeholder=\"Национальность\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Рост см\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.height}\n                            name='height'\n                            type={'number'}\n                            onChange={inputHandler}\n                            placeholder=\"Рост см\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Возраст лет\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.age}\n                            name='height'\n                            type={'number'}\n                            onChange={inputHandler}\n                            placeholder=\"Возраст лет\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Позиция игрока\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.position}\n                            name='position'\n                            type={'text'}\n                            onChange={inputHandler}\n                            placeholder=\"Позиция\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Игровой номер\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.gameNumber}\n                            name='gameNumber'\n                            onChange={inputHandler}\n                            placeholder=\"Введите Игровой номер игрока\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            День рождения!\n                        </Text>\n                        <DatePicker\n                            value={form.birth}\n                            onChange={dateHandler}\n                        />\n                        {/*<Input*/}\n                        {/*    as={}*/}\n                        {/*    variant=\"flushed\"*/}\n                        {/*    value={form.birth}*/}\n                        {/*    onChange={dateHandler}*/}\n                        {/*    size=\"sm\"*/}\n                        {/*    px={2}*/}\n                        {/*    isDisabled={disable}*/}\n                        {/*    required*/}\n                        {/*    _disabled={{*/}\n                        {/*        cursor: \"not-allowed\",*/}\n                        {/*    }}*/}\n                        {/*/>*/}\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Логотип команды\n                        </Text>\n                        <ImageUploading\n                            value={form.image}\n                            onChange={imageUploaderHandler}\n                            maxNumber={1}\n                        >\n                            {({\n                                  imageList,\n                                  onImageUpload,\n                                  onImageRemoveAll,\n                                  isDragging,\n                                  dragProps\n                              }) => (\n                                // write your building UI\n                                <Flex\n                                    w='100%'\n                                    h='320px'\n                                    maxW='320px'\n                                    flexDirection={'column'}>\n                                    {form.image.length\n                                        ? <Button\n                                            variant={\"outline\"}\n                                            colorScheme={\"red\"}\n                                            isDisabled={disable}\n                                            onClick={onImageRemoveAll}>Удалить Логотип</Button>\n                                        : <Button\n                                            colorScheme={\"telegram\"}\n                                            onClick={onImageUpload}\n                                            {...dragProps}\n                                            variant={isDragging ? \"ghost\" : \"outline\"}\n                                            isDisabled={disable}\n                                            w='100%'\n                                            h='100%'\n                                            maxW='auto'\n                                        >\n                                            Нажмите или перетащите сюда логотип\n                                        </Button>}\n                                    {imageList.map((image, index) => (\n                                        <Flex\n                                            justifyContent={\"center\"}\n                                            alignItems={\"center\"}\n                                            mt={4}\n                                            w='100%'\n                                            h='100%'\n                                            border={'1px solid #007ab8'}\n                                            p={'1.5rem'}\n                                            key={index}\n                                            borderRadius={'.625rem'}>\n                                            <Box>\n                                                <Image src={image.dataURL}/>\n                                            </Box>\n                                        </Flex>\n                                    ))}\n                                </Flex>\n                            )}\n                        </ImageUploading>\n                    </Box>\n                    <Flex justifyContent={\"center\"} alignItems={\"center\"}>\n\n                        <Button variant={\"outline\"}\n                                colorScheme={\"teal\"}\n                                isDisabled={disable}\n                                type={\"submit\"}\n                                mx={2}\n                        >\n                            Подтвердить</Button>\n                        <Button variant={\"outline\"}\n                                colorScheme={\"red\"}\n                                isDisabled={disable}\n                                type={\"reset\"}\n                                mx={2}\n                        >\n                            Сбросить</Button>\n                    </Flex>\n                </form>\n            </Block>\n        </>\n    )\n}\n","import React, {useState} from 'react'\nimport {Button, Flex, Grid} from \"@chakra-ui/react\";\nimport {PlayerCard, PlayerCardInterface} from \"./PlayerCard\";\nimport {SkeletonStack} from \"../../../components/ui/skeleton/SkeletonStack\";\nimport {CreatePlayer} from \"./CreatePlayer\";\n\n\nexport const Staff: React.FC = () => {\n    const [create, setCreate] = useState<boolean>(true)\n    const [arr, setArr] = useState<PlayerCardInterface[] | []>([{\n        icon: \"\",\n        name: \"\",\n        surname: \"\",\n        position: \"\",\n        number: 10,\n    }])\n    return (\n        <>\n            <Flex mb={4} justifyContent={\"flex-end\"}>\n                <Button colorScheme={create ? \"orange\" : \"blue\"} variant=\"solid\" size={'lg'}\n                        onClick={() => setCreate(prevState => !prevState)}>\n                    {create ? \"Отменить\" : \"Добавить Игрока\"}\n                </Button>\n            </Flex>\n            {create\n                ? <CreatePlayer/>\n                : <Grid\n                    templateColumns={{base: 'repeat(1, 1fr)', md: \"repeat(2, 1fr)\", lg: \"repeat(3, 1fr)\"}}\n                    gap={6}>\n                    {arr.length ? arr.map((item, key: number) => <PlayerCard\n                            icon='http://basketball.vizavi97.tmweb.ru/storage/app/uploads/public/609/570/bf6/609570bf6ba94977801792.png'\n                            name='Мухаммадали' surname='Мамарасулов' number={7} position=\"Лёгкий форвард\"/>) :\n                        <SkeletonStack length={3}/>\n                    }\n                </Grid>\n            }\n        </>\n    )\n}\n","import React from 'react'\nimport {Block} from \"../../../config/ui/Block\";\nimport {Box, Button, Flex, GridItem, Image, Text} from \"@chakra-ui/react\";\n\nexport interface TeamsCardInterface {\n    icon: string,\n    name: string,\n}\n\nexport const TeamsCard: React.FC<TeamsCardInterface> = ({\n                                                              icon,\n                                                              name,\n                                                          }) => {\n    return (\n        <>\n            <GridItem colSpan={1}>\n                <Block p={2} variant={'rounded'} _hover={{boxShadow: \"0 0 13px 1px #11111130\", transform: \"translateY(-.375rem)\"}}\n                       transition={'all .3s ease'}>\n                    <Flex flexDirection={\"column\"} justifyContent={\"center\"} textAlign={'center'}>\n                        <Image src={icon} title={name} objectFit={\"cover\"} objectPosition={\"top\"}\n                               h={'100%'} maxH={\"360px\"}/>\n                        <Box p={4}>\n                            <Text as={'h3'} fontWeight={700}>{name}</Text>\n                        </Box>\n                        <Flex justifyContent={\"center\"} pb={4}>\n                            <Button colorScheme='red' mx={2}>\n                                Удалить\n                            </Button>\n                            <Button colorScheme='teal' mx={2}>\n                                Изменить\n                            </Button>\n                        </Flex>\n                    </Flex>\n                </Block>\n            </GridItem>\n        </>\n    )\n}\n","import React, {ChangeEvent, FormEvent, useState} from 'react'\nimport {Block} from \"../../../config/ui/Block\";\nimport {Box, Button, Flex, Input, Select, Text, Image} from \"@chakra-ui/react\";\nimport ImageUploading, {ImageListType} from \"react-images-uploading\";\n\ninterface CreateTeamInterface {\n}\n\ninterface CreateTeamFormInterface {\n    name: string\n    icon: any\n    gender: 'women' | 'men' | '' | string\n    type: '5x5' | '3x3' | '' | string\n    address: string,\n    age: \"U16\" | \"U18\" | \"OLDER\" | \"\" | string\n}\n\ninterface SelectTeamFormInterface {\n    title: string\n    gender?: string\n    type?: string\n    age?: string\n}\n\nconst genderArr = [\n    {\n        title: \"Женская команда\",\n        gender: 'women'\n    },\n    {\n        title: \"Мужская команда\",\n        gender: 'men'\n    },\n] as SelectTeamFormInterface[]\n\nconst typeArr = [\n    {\n        title: \"5x5\",\n        type: '5x5'\n    },\n    {\n        title: \"3x3\",\n        gender: '3x3'\n    },\n] as SelectTeamFormInterface[]\n\nconst ageArr = [\n    {\n        title: \"U16\",\n        age: \"U16\"\n    },\n    {\n        title: \"U18\",\n        age: \"U18\"\n    },\n    {\n        title: \"Взрослые\",\n        age: \"OLDER\"\n    },\n] as SelectTeamFormInterface[]\n\n\nexport const CreateTeam: React.FC<CreateTeamInterface> = () => {\n    const [disable, setDisable] = useState<boolean>(false)\n    const [form, setForm] = useState<CreateTeamFormInterface>({\n        name: \"\",\n        address: \"\",\n        gender: \"\",\n        type: \"\",\n        age: \"\",\n        icon: []\n    })\n    const inputHandler = (event: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const {name, value} = event.target\n        setForm(state => ({\n            ...state,\n            [name]: value\n        }))\n    }\n    const imageUploaderHandler = (imageList: ImageListType) => setForm(state => ({\n        ...state,\n        icon: imageList as never[]\n    }));\n    const submitHandler = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        console.log('submitHandler')\n    }\n    return (\n        <>\n            <Block py={6} maxW={{md: \"540ox\", xs: \"100%\"}}>\n                <Text as={'h2'} fontWeight={600} textAlign={\"center\"} fontSize={\"2rem\"}>Форма создания команды</Text>\n                <form onSubmit={submitHandler}>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Название команды\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.name}\n                            name='name'\n                            onChange={inputHandler}\n                            placeholder=\"Введите название команды\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Адрес команды (Область или Город, Поселок или населеный пункт, Улица, Строение )\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.address}\n                            name='address'\n                            onChange={inputHandler}\n                            placeholder=\"Введите название команды\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Возрастная группа команды\n                        </Text>\n                        <Select\n                            variant=\"flushed\"\n                            name='age'\n                            px={2}\n                            value={form.age}\n                            onChange={inputHandler}\n                            required\n                            placeholder=\"Выберете возрастную группа команды\"\n                        >\n                            {typeArr.map((item, key: number) => <option key={key}\n                                                                        value={item.type}>{item.title}</option>)}\n                        </Select>\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            тип команды\n                        </Text>\n                        <Select\n                            variant=\"flushed\"\n                            name='type'\n                            px={2}\n                            value={form.type}\n                            onChange={inputHandler}\n                            required\n                            placeholder=\"Выберете тип  команды\"\n                        >\n                            {typeArr.map((item, key: number) => <option key={key}\n                                                                        value={item.type}>{item.title}</option>)}\n                        </Select>\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Пол команды\n                        </Text>\n                        <Select\n                            variant=\"flushed\"\n                            name='gender'\n                            px={2}\n                            value={form.gender}\n                            onChange={inputHandler}\n                            required\n                            placeholder=\"Выберете пол команды\"\n                        >\n                            {genderArr.map((item, key: number) => <option key={key}\n                                                                          value={item.gender}>{item.title}</option>)}\n                        </Select>\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Логотип команды\n                        </Text>\n                        <ImageUploading\n                            value={form.icon}\n                            onChange={imageUploaderHandler}\n                            maxNumber={1}\n                        >\n                            {({\n                                  imageList,\n                                  onImageUpload,\n                                  onImageRemoveAll,\n                                  isDragging,\n                                  dragProps\n                              }) => (\n                                // write your building UI\n                                <Flex\n                                    w='100%'\n                                    h='320px'\n                                    maxW='320px'\n                                    flexDirection={'column'}>\n                                    {form.icon.length\n                                        ? <Button\n                                            variant={\"outline\"}\n                                            colorScheme={\"red\"}\n                                            isDisabled={disable}\n                                            onClick={onImageRemoveAll}>Удалить Логотип</Button>\n                                        : <Button\n                                            colorScheme={\"telegram\"}\n                                            onClick={onImageUpload}\n                                            {...dragProps}\n                                            variant={isDragging ? \"ghost\" : \"outline\"}\n                                            isDisabled={disable}\n                                            w='100%'\n                                            h='100%'\n                                            maxW='auto'\n                                        >\n                                            Нажмите или перетащите сюда логотип\n                                        </Button>}\n                                    {imageList.map((image, index) => (\n                                        <Flex\n                                            justifyContent={\"center\"}\n                                            alignItems={\"center\"}\n                                            mt={4}\n                                            w='100%'\n                                            h='100%'\n                                            border={'1px solid #007ab8'}\n                                            p={'1.5rem'}\n                                            key={index}\n                                            borderRadius={'.625rem'}>\n                                            <Box>\n                                                <Image src={image.dataURL}/>\n                                            </Box>\n                                        </Flex>\n                                    ))}\n                                </Flex>\n                            )}\n                        </ImageUploading>\n                    </Box>\n\n\n                    <Flex justifyContent={\"center\"} alignItems={\"center\"}>\n\n                        <Button variant={\"outline\"}\n                                colorScheme={\"teal\"}\n                                isDisabled={disable}\n                                type={\"submit\"}\n                                mx={2}\n                        >\n                            Подтвердить</Button>\n                        <Button variant={\"outline\"}\n                                colorScheme={\"red\"}\n                                isDisabled={disable}\n                                type={\"reset\"}\n                                mx={2}\n                        >\n                            Сбросить</Button>\n                    </Flex>\n                </form>\n            </Block>\n        </>\n    )\n}\n","import React, {useState} from 'react'\nimport {Button, Flex, Grid} from \"@chakra-ui/react\";\nimport {SkeletonStack} from \"../../../components/ui/skeleton/SkeletonStack\";\nimport {TeamsCard, TeamsCardInterface} from \"./TeamsCard\";\nimport {CreateTeam} from \"./CreateTeam\";\n\n\nexport const Teams: React.FC = () => {\n    const [create, setCreate] = useState<boolean>(false)\n    const [arr, setArr] = useState<TeamsCardInterface[] | []>([{\n        icon: \"\",\n        name: \"\"\n    }])\n    return (\n        <>\n            <Flex mb={4} justifyContent={\"flex-end\"}>\n                <Button colorScheme={create ? \"orange\" : \"blue\"} variant=\"solid\" size={'lg'}\n                        onClick={() => setCreate(prevState => !prevState)}>\n                    {create ? \"Отменить\" : \"Добавить Команду\"}\n                </Button>\n            </Flex>\n            {create\n                ? <CreateTeam/>\n                : <Grid\n                    templateColumns={{base: 'repeat(1, 1fr)', md: \"repeat(2, 1fr)\", lg: \"repeat(3, 1fr)\"}}\n                    gap={6}>\n                    {arr.length ? arr.map((item, key: number) => <TeamsCard\n                            key={key}\n                            icon='https://i.pinimg.com/originals/c7/5c/28/c75c28559e048ecb2e0c232a374ebaa2.jpg'\n                            name='Real madrid'/>\n                        ) :\n                        <SkeletonStack length={3}/>\n                    }\n                </Grid>\n            }\n\n        </>\n    )\n}\n","import React, {ChangeEvent, FormEvent, useState} from 'react'\nimport {Block} from \"../../../config/ui/Block\";\nimport {Box, Button, Flex, Grid, Image, Input, Text} from \"@chakra-ui/react\";\nimport ImageUploading, {ImageListType} from \"react-images-uploading\";\nimport 'react-datepicker/dist/react-datepicker.css'\nimport DatePicker from \"react-datepicker/dist/react-datepicker\";\n\nexport interface CoachSettingsInterface {\n    name: string\n    surname: string\n    fatherName: string\n    birth: string | number | readonly string[] | undefined\n    nationality: string\n    docs_education: any,\n    docs__one: any,\n    docs__two: any,\n    docs__three: any,\n\n}\n\nexport const Settings: React.FC = () => {\n    const [disable] = useState<boolean>(false)\n    const [form, setForm] = useState<CoachSettingsInterface>({\n        name: \"\",\n        surname: \"\",\n        fatherName: \"\",\n        birth: new Date().toLocaleDateString(),\n        nationality: \"\",\n        docs_education: [],\n        docs__one: [],\n        docs__two: [],\n        docs__three: [],\n\n    })\n    const dateHandler = (date) => setForm(state => ({...state, birth: new Date(date).toLocaleDateString()}));\n\n    const inputHandler = (event: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const {name, value} = event.target\n        setForm(state => ({\n            ...state,\n            [name]: value\n        }))\n    }\n    const imageUploaderHandler = (imageList: ImageListType) => setForm(state => ({\n        ...state,\n        icon: imageList as never[]\n    }));\n    const submitHandler = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        console.log('submitHandler')\n    }\n    return (\n        <>\n            <Block py={6} maxW={{md: \"540ox\", xs: \"100%\"}}>\n                <Text as={'h2'} fontWeight={600} textAlign={\"center\"} fontSize={\"2rem\"}>Настройки</Text>\n                <form onSubmit={submitHandler}>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Имя\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.name}\n                            name='name'\n                            onChange={inputHandler}\n                            placeholder=\"Введите Имя\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Фамилия\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.surname}\n                            name='surname'\n                            onChange={inputHandler}\n                            placeholder=\"Введите Фамилию игрока\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Отчество\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.fatherName}\n                            name='fatherName'\n                            onChange={inputHandler}\n                            placeholder=\"Введите Отчетсво\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            День рождения!\n                        </Text>\n                        <DatePicker\n                            value={form.birth}\n                            onChange={dateHandler}\n                        />\n                        {/*<Input*/}\n                        {/*    as={}*/}\n                        {/*    variant=\"flushed\"*/}\n                        {/*    value={form.birth}*/}\n                        {/*    onChange={dateHandler}*/}\n                        {/*    size=\"sm\"*/}\n                        {/*    px={2}*/}\n                        {/*    isDisabled={disable}*/}\n                        {/*    required*/}\n                        {/*    _disabled={{*/}\n                        {/*        cursor: \"not-allowed\",*/}\n                        {/*    }}*/}\n                        {/*/>*/}\n                    </Box>\n                    <Grid templateColumns={{base: \"repeat(1, 1fr)\", md: \"repeat(2, 1fr)\", lg: \"repeat(2, 1fr)\"}} alignItems={\"center\"} justifyContent={\"center\"}>\n\n\n                        <Box p={4}>\n                            <Text mb=\"8px\">\n                                Фотография диплома\n                            </Text>\n                            <ImageUploading\n                                value={form.docs_education}\n                                onChange={imageUploaderHandler}\n                                maxNumber={1}\n                            >\n                                {({\n                                      imageList,\n                                      onImageUpload,\n                                      onImageRemoveAll,\n                                      isDragging,\n                                      dragProps\n                                  }) => (\n                                    // write your building UI\n                                    <Flex\n                                        w='100%'\n                                        h='320px'\n                                        maxW='320px'\n                                        flexDirection={'column'}>\n                                        {form.docs_education.length\n                                            ? <Button\n                                                variant={\"outline\"}\n                                                colorScheme={\"red\"}\n                                                isDisabled={disable}\n                                                onClick={onImageRemoveAll}>Удалить Логотип</Button>\n                                            : <Button\n                                                colorScheme={\"telegram\"}\n                                                onClick={onImageUpload}\n                                                {...dragProps}\n                                                variant={isDragging ? \"ghost\" : \"outline\"}\n                                                isDisabled={disable}\n                                                w='100%'\n                                                h='100%'\n                                                maxW='auto'\n                                            >\n                                                Нажмите или перетащите\n                                                сюда <br/>\n\n                                                фотографию команды\n                                            </Button>}\n                                        {imageList.map((image, index) => (\n                                            <Flex\n                                                justifyContent={\"center\"}\n                                                alignItems={\"center\"}\n                                                mt={4}\n                                                w='100%'\n                                                h='100%'\n                                                border={'1px solid #007ab8'}\n                                                p={'1.5rem'}\n                                                key={index}\n                                                borderRadius={'.625rem'}>\n                                                <Box>\n                                                    <Image src={image.dataURL}/>\n                                                </Box>\n                                            </Flex>\n                                        ))}\n                                    </Flex>\n                                )}\n                            </ImageUploading>\n                        </Box>\n\n                        <Box p={4}>\n                            <Text mb=\"8px\">\n                                Сертификат повышения квалификации\n                            </Text>\n                            <ImageUploading\n                                value={form.docs__one}\n                                onChange={imageUploaderHandler}\n                                maxNumber={1}\n                            >\n                                {({\n                                      imageList,\n                                      onImageUpload,\n                                      onImageRemoveAll,\n                                      isDragging,\n                                      dragProps\n                                  }) => (\n                                    // write your building UI\n                                    <Flex\n                                        w='100%'\n                                        h='320px'\n                                        maxW='320px'\n                                        flexDirection={'column'}>\n                                        {form.docs__one.length\n                                            ? <Button\n                                                variant={\"outline\"}\n                                                colorScheme={\"red\"}\n                                                isDisabled={disable}\n                                                onClick={onImageRemoveAll}>Удалить Логотип</Button>\n                                            : <Button\n                                                colorScheme={\"telegram\"}\n                                                onClick={onImageUpload}\n                                                {...dragProps}\n                                                variant={isDragging ? \"ghost\" : \"outline\"}\n                                                isDisabled={disable}\n                                                w='100%'\n                                                h='100%'\n                                                maxW='auto'\n                                            >\n                                                Нажмите или перетащите\n                                                сюда <br/>\n\n                                                Сертификат повышения квалификации\n                                            </Button>}\n                                        {imageList.map((image, index) => (\n                                            <Flex\n                                                justifyContent={\"center\"}\n                                                alignItems={\"center\"}\n                                                mt={4}\n                                                w='100%'\n                                                h='100%'\n                                                border={'1px solid #007ab8'}\n                                                p={'1.5rem'}\n                                                key={index}\n                                                borderRadius={'.625rem'}>\n                                                <Box>\n                                                    <Image src={image.dataURL}/>\n                                                </Box>\n                                            </Flex>\n                                        ))}\n                                    </Flex>\n                                )}\n                            </ImageUploading>\n                        </Box>\n\n\n                        <Box p={4}>\n                            <Text mb=\"8px\">\n                                Документ подтверждающий категория\n                            </Text>\n                            <ImageUploading\n                                value={form.docs__two}\n                                onChange={imageUploaderHandler}\n                                maxNumber={1}\n                            >\n                                {({\n                                      imageList,\n                                      onImageUpload,\n                                      onImageRemoveAll,\n                                      isDragging,\n                                      dragProps\n                                  }) => (\n                                    // write your building UI\n                                    <Flex\n                                        w='100%'\n                                        h='320px'\n                                        maxW='320px'\n                                        flexDirection={'column'}>\n                                        {form.docs__two.length\n                                            ? <Button\n                                                variant={\"outline\"}\n                                                colorScheme={\"red\"}\n                                                isDisabled={disable}\n                                                onClick={onImageRemoveAll}>Удалить Логотип</Button>\n                                            : <Button\n                                                colorScheme={\"telegram\"}\n                                                onClick={onImageUpload}\n                                                {...dragProps}\n                                                variant={isDragging ? \"ghost\" : \"outline\"}\n                                                isDisabled={disable}\n                                                w='100%'\n                                                h='100%'\n                                                maxW='auto'\n                                            >\n                                                Нажмите или перетащите\n                                                сюда <br/>\n\n                                                Сертификат повышения квалификации\n                                            </Button>}\n                                        {imageList.map((image, index) => (\n                                            <Flex\n                                                justifyContent={\"center\"}\n                                                alignItems={\"center\"}\n                                                mt={4}\n                                                w='100%'\n                                                h='100%'\n                                                border={'1px solid #007ab8'}\n                                                p={'1.5rem'}\n                                                key={index}\n                                                borderRadius={'.625rem'}>\n                                                <Box>\n                                                    <Image src={image.dataURL}/>\n                                                </Box>\n                                            </Flex>\n                                        ))}\n                                    </Flex>\n                                )}\n                            </ImageUploading>\n                        </Box>\n\n                        <Box p={4}>\n                            <Text mb=\"8px\">\n                                Международний сертификат\n                            </Text>\n                            <ImageUploading\n                                value={form.docs__three}\n                                onChange={imageUploaderHandler}\n                                maxNumber={1}\n                            >\n                                {({\n                                      imageList,\n                                      onImageUpload,\n                                      onImageRemoveAll,\n                                      isDragging,\n                                      dragProps\n                                  }) => (\n                                    // write your building UI\n                                    <Flex\n                                        w='100%'\n                                        h='320px'\n                                        maxW='320px'\n                                        flexDirection={'column'}>\n                                        {form.docs__three.length\n                                            ? <Button\n                                                variant={\"outline\"}\n                                                colorScheme={\"red\"}\n                                                isDisabled={disable}\n                                                onClick={onImageRemoveAll}>Удалить</Button>\n                                            : <Button\n                                                colorScheme={\"telegram\"}\n                                                onClick={onImageUpload}\n                                                {...dragProps}\n                                                variant={isDragging ? \"ghost\" : \"outline\"}\n                                                isDisabled={disable}\n                                                w='100%'\n                                                h='100%'\n                                                maxW='auto'\n                                            >\n                                                Нажмите или перетащите\n                                                сюда <br/>\n\n                                                Международний сертификат\n                                            </Button>}\n                                        {imageList.map((image, index) => (\n                                            <Flex\n                                                justifyContent={\"center\"}\n                                                alignItems={\"center\"}\n                                                mt={4}\n                                                w='100%'\n                                                h='100%'\n                                                border={'1px solid #007ab8'}\n                                                p={'1.5rem'}\n                                                key={index}\n                                                borderRadius={'.625rem'}>\n                                                <Box>\n                                                    <Image src={image.dataURL}/>\n                                                </Box>\n                                            </Flex>\n                                        ))}\n                                    </Flex>\n                                )}\n                            </ImageUploading>\n                        </Box>\n                    </Grid>\n\n                    <Flex justifyContent={\"center\"} alignItems={\"center\"}>\n                        <Button variant={\"outline\"}\n                                colorScheme={\"teal\"}\n                                isDisabled={disable}\n                                type={\"submit\"}\n                                mx={2}\n                        >\n                            Подтвердить</Button>\n                        <Button variant={\"outline\"}\n                                colorScheme={\"red\"}\n                                isDisabled={disable}\n                                type={\"reset\"}\n                                mx={2}\n                        >\n                            Сбросить</Button>\n                    </Flex>\n                </form>\n            </Block>\n        </>\n    )\n}\n","import React, {ChangeEvent, FormEvent, useState} from 'react'\nimport {Block} from \"../../../config/ui/Block\";\nimport {Box, Button, Flex, Input, Select, Text, Image} from \"@chakra-ui/react\";\nimport ImageUploading, {ImageListType} from \"react-images-uploading\";\n\ninterface CreateTeamInterface {\n}\n\ninterface CreateTeamFormInterface {\n    address: string,\n    icon: any\n    gender: 'women' | 'men' | '' | string\n    type: '5x5' | '3x3' | '' | string\n    age: \"U16\" | \"U18\" | \"OLDER\" | \"\" | string\n}\n\ninterface SelectTeamFormInterface {\n    title: string\n    gender?: string\n    type?: string\n    age?: string\n}\n\nconst genderArr = [\n    {\n        title: \"Женская команда\",\n        gender: 'women'\n    },\n    {\n        title: \"Мужская команда\",\n        gender: 'men'\n    },\n] as SelectTeamFormInterface[]\n\nconst typeArr = [\n    {\n        title: \"5x5\",\n        type: '5x5'\n    },\n    {\n        title: \"3x3\",\n        gender: '3x3'\n    },\n] as SelectTeamFormInterface[]\n\nconst ageArr = [\n    {\n        title: \"U16\",\n        age: \"U16\"\n    },\n    {\n        title: \"U18\",\n        age: \"U18\"\n    },\n    {\n        title: \"Взрослые\",\n        age: \"OLDER\"\n    },\n] as SelectTeamFormInterface[]\n\n\nexport const CreateSportSection: React.FC<CreateTeamInterface> = () => {\n    const [disable, setDisable] = useState<boolean>(false)\n    const [form, setForm] = useState<CreateTeamFormInterface>({\n        address: \"\",\n        gender: \"\",\n        type: \"\",\n        age: \"\",\n        icon: []\n    })\n    const inputHandler = (event: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const {name, value} = event.target\n        setForm(state => ({\n            ...state,\n            [name]: value\n        }))\n    }\n    const imageUploaderHandler = (imageList: ImageListType) => setForm(state => ({\n        ...state,\n        icon: imageList as never[]\n    }));\n    const submitHandler = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        console.log('submitHandler')\n    }\n    return (\n        <>\n            <Block py={6} maxW={{md: \"540ox\", xs: \"100%\"}}>\n                <Text as={'h2'} fontWeight={600} textAlign={\"center\"} fontSize={\"2rem\"}>Создание секции</Text>\n                <form onSubmit={submitHandler}>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Адрес команды (Область или Город, Поселок или населеный пункт, Улица, Строение )\n                        </Text>\n                        <Input\n                            variant=\"flushed\"\n                            value={form.address}\n                            name='address'\n                            onChange={inputHandler}\n                            placeholder=\"Введите название команды\"\n                            size=\"sm\"\n                            px={2}\n                            isDisabled={disable}\n                            required\n                            _disabled={{\n                                cursor: \"not-allowed\",\n                            }}\n                        />\n                    </Box>\n\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Возрастная группа команды\n                        </Text>\n                        <Select\n                            variant=\"flushed\"\n                            name='age'\n                            px={2}\n                            value={form.age}\n                            onChange={inputHandler}\n                            required\n                            placeholder=\"Выберете возрастную группа команды\"\n                        >\n                            {typeArr.map((item, key: number) => <option key={key}\n                                                                        value={item.type}>{item.title}</option>)}\n                        </Select>\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            тип команды\n                        </Text>\n                        <Select\n                            variant=\"flushed\"\n                            name='type'\n                            px={2}\n                            value={form.type}\n                            onChange={inputHandler}\n                            required\n                            placeholder=\"Выберете тип  команды\"\n                        >\n                            {typeArr.map((item, key: number) => <option key={key}\n                                                                        value={item.type}>{item.title}</option>)}\n                        </Select>\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Пол команды\n                        </Text>\n                        <Select\n                            variant=\"flushed\"\n                            name='gender'\n                            px={2}\n                            value={form.gender}\n                            onChange={inputHandler}\n                            required\n                            placeholder=\"Выберете пол команды\"\n                        >\n                            {genderArr.map((item, key: number) => <option key={key}\n                                                                          value={item.gender}>{item.title}</option>)}\n                        </Select>\n                    </Box>\n                    <Box p={4}>\n                        <Text mb=\"8px\">\n                            Фотография спортивной-секции\n                        </Text>\n                        <ImageUploading\n                            value={form.icon}\n                            onChange={imageUploaderHandler}\n                            maxNumber={1}\n                        >\n                            {({\n                                  imageList,\n                                  onImageUpload,\n                                  onImageRemoveAll,\n                                  isDragging,\n                                  dragProps\n                              }) => (\n                                // write your building UI\n                                <Flex\n                                    w='100%'\n                                    h='320px'\n                                    maxW='320px'\n                                    flexDirection={'column'}>\n                                    {form.icon.length\n                                        ? <Button\n                                            variant={\"outline\"}\n                                            colorScheme={\"red\"}\n                                            isDisabled={disable}\n                                            onClick={onImageRemoveAll}>Удалить Логотип</Button>\n                                        : <Button\n                                            colorScheme={\"telegram\"}\n                                            onClick={onImageUpload}\n                                            {...dragProps}\n                                            variant={isDragging ? \"ghost\" : \"outline\"}\n                                            isDisabled={disable}\n                                            w='100%'\n                                            h='100%'\n                                            maxW='auto'\n                                        >\n                                            Нажмите или перетащите\n                                            сюда <br/>\n\n                                            фотографию команды\n                                        </Button>}\n                                    {imageList.map((image, index) => (\n                                        <Flex\n                                            justifyContent={\"center\"}\n                                            alignItems={\"center\"}\n                                            mt={4}\n                                            w='100%'\n                                            h='100%'\n                                            border={'1px solid #007ab8'}\n                                            p={'1.5rem'}\n                                            key={index}\n                                            borderRadius={'.625rem'}>\n                                            <Box>\n                                                <Image src={image.dataURL}/>\n                                            </Box>\n                                        </Flex>\n                                    ))}\n                                </Flex>\n                            )}\n                        </ImageUploading>\n                    </Box>\n\n\n                    <Flex justifyContent={\"center\"} alignItems={\"center\"}>\n\n                        <Button variant={\"outline\"}\n                                colorScheme={\"teal\"}\n                                isDisabled={disable}\n                                type={\"submit\"}\n                                mx={2}\n                        >\n                            Подтвердить</Button>\n                        <Button variant={\"outline\"}\n                                colorScheme={\"red\"}\n                                isDisabled={disable}\n                                type={\"reset\"}\n                                mx={2}\n                        >\n                            Сбросить</Button>\n                    </Flex>\n                </form>\n            </Block>\n        </>\n    )\n}\n","import React, {useState} from 'react'\nimport {TeamsCard, TeamsCardInterface} from \"../team/TeamsCard\";\nimport {Button, Flex, Grid} from \"@chakra-ui/react\";\nimport {SkeletonStack} from \"../../../components/ui/skeleton/SkeletonStack\";\nimport {CreateSportSection} from \"./CreateSection\";\n\ninterface SportSectionInterface {\n}\n\nexport const SportSection: React.FC<SportSectionInterface> = () => {\n    const [create, setCreate] = useState<boolean>(false)\n    const [arr, setArr] = useState<TeamsCardInterface[] | []>([{\n        icon: \"\",\n        name: \"\"\n    }])\n    return (\n        <>\n            <Flex mb={4} justifyContent={\"flex-end\"}>\n                <Button colorScheme={create ? \"orange\" : \"blue\"} variant=\"solid\" size={'lg'}\n                        onClick={() => setCreate(prevState => !prevState)}>\n                    {create ? \"Отменить\" : \"Создать Секцию\"}\n                </Button>\n            </Flex>\n            {create\n                ? <CreateSportSection/>\n                : <Grid\n                    templateColumns={{base: 'repeat(1, 1fr)', md: \"repeat(2, 1fr)\", lg: \"repeat(3, 1fr)\"}}\n                    gap={6}>\n                    {arr.length ? arr.map((item, key: number) => <TeamsCard\n                            key={key}\n                            icon='https://i.pinimg.com/originals/c7/5c/28/c75c28559e048ecb2e0c232a374ebaa2.jpg'\n                            name='Real madrid'/>\n                        ) :\n                        <SkeletonStack length={3}/>\n                    }\n                </Grid>\n            }\n\n        </>\n    )\n}\n","import React from 'react'\nimport {Box, Flex, Progress, Spinner} from \"@chakra-ui/react\";\n\ninterface PreLoaderInterface {\n}\n\nexport const PreLoader: React.FC<PreLoaderInterface> = () => {\n\n\n    return (\n        <>\n            <Box\n                w={\"100%\"}\n                h={\"100vh\"}\n                position={\"fixed\"}\n                top={0}\n                left={0}\n            >\n                <Progress\n                    isIndeterminate\n                    colorScheme={'teal'}\n                    size={\"xs\"}\n                />\n            </Box>\n            <Flex w={\"100%\"}\n                  h={\"100vh\"}\n                  position={\"fixed\"}\n                  top={0}\n                  left={0}\n                  justifyContent={\"center\"}\n                  alignItems={\"center\"}\n            >\n                <Spinner   thickness=\"4px\"\n                           speed=\"0.65s\"\n                           emptyColor=\"gray.200\"\n                           color=\"teal\"\n                           size=\"xl\"/>\n            </Flex>\n        </>\n    )\n}\n","export const LOADING_USER =  \"LOADING_USER\"\nexport const REGISTER_USER = \"REGISTER_USER\"\nexport const LOGIN_USER = \"LOGIN_USER\"\nexport const ME_QUERY = \"ME_QUERY\"\nexport const LOGOUT_USER = \"LOGOUT_USER\"\nexport const CHANGE_USER_PROFILE = \"CHANGE_USER_PROFILE\"","import React, {useEffect} from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport {Login} from \"./pages/auth/Login\";\r\nimport {Main} from \"./pages/private/Main\";\r\nimport {CabinetLayout} from \"./components/layout/cabinet/CabinetLayout\";\r\nimport {Staff} from \"./pages/private/staff/Staff\";\r\nimport {Teams} from \"./pages/private/team/Teams\";\r\nimport {Settings} from \"./pages/private/settings/Settings\";\r\nimport {SportSection} from \"./pages/private/sport-section/SportSection\";\r\nimport {PreLoader} from \"./components/PreLoader\";\r\nimport {meQuery} from \"./store/actions/user.action\";\r\nimport {RootStateOrAny, useDispatch, useSelector} from \"react-redux\";\r\nimport {useToast} from \"@chakra-ui/react\";\r\nimport {AuthLayout} from \"./components/layout/auth/AuthLayout\";\r\nimport {Register} from \"./pages/auth/Register\";\r\nimport {RestorePassword} from \"./pages/auth/RestorePassword\";\r\nimport {RestorePasswordField} from \"./pages/auth/RestorePasswordField\";\r\n\r\n\r\nfunction App() {\r\n    const toast = useToast()\r\n    const {user, loader, message, error, renderCounter} = useSelector((state: RootStateOrAny) => state.user);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(meQuery())\r\n    }, [dispatch])\r\n    useEffect(() => {\r\n        if (message) {\r\n            toast({\r\n                title: error ? \"Error\" : \"Success\",\r\n                position: \"top\",\r\n                description: message,\r\n                status: error ? \"error\" : \"success\",\r\n                duration: 2000,\r\n                isClosable: true,\r\n            })\r\n        }\r\n    }, [renderCounter, toast, error, message]);\r\n\r\n    if (loader) {\r\n        return (<PreLoader/>)\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <CabinetLayout>\r\n                <Switch>\r\n                    <Route exact path='/' component={Main}/>\r\n                    <Route path='/staff' component={Staff}/>\r\n                    <Route path='/teams' component={Teams}/>\r\n                    <Route path='/sport-section' component={SportSection}/>\r\n                    <Route path='/settings' component={Settings}/>\r\n                </Switch>\r\n            </CabinetLayout>\r\n        </BrowserRouter>\r\n    )\r\n    \r\n\r\n    // return (\r\n    //     <BrowserRouter>\r\n    //         <AuthLayout>\r\n    //             <Switch>\r\n    //                 <Route exact path='/register' component={Register}/>\r\n    //                 <Route exact path='/restore-password' component={RestorePassword}/>\r\n    //                 <Route exact path='/restore-message' component={RestorePasswordField}/>\r\n    //                 <Route exact path='/*' component={Login}/>\r\n    //             </Switch>\r\n    //         </AuthLayout>\r\n    //     </BrowserRouter>\r\n    // );\r\n}\r\n\r\nexport default App;\r\n","import {Dispatch} from \"react\";\nimport {DispatchEvent} from \"../redux\";\nimport {CHANGE_USER_PROFILE, LOADING_USER, LOGIN_USER, LOGOUT_USER, ME_QUERY, REGISTER_USER} from \"../types/user.types\";\nimport {\n    ChangeUserInfoDispatchInterface,\n    ChangeUserInfoInterface,\n    LoginParamsInterface,\n    RegisterParamsInterface,\n    UserDispatchInterface,\n    UserLoadingDispatchInterface\n} from \"../interfaces/user\"\nimport {BACKEND_API_URL} from \"../../config/app.config\";\nimport axios from \"axios\";\nimport {CoachSettingsInterface} from \"../../pages/private/settings/Settings\";\n\nexport const register = (params: RegisterParamsInterface) => async (dispatch: Dispatch<DispatchEvent<UserDispatchInterface>>) => {\n    await axios.post(`${BACKEND_API_URL}signup`, {\n        name: params.name,\n        email: params.email,\n        password: params.password,\n        password_confirmation: params.password_confirmation,\n    })\n        .then((resp) => {\n            localStorage.setItem('token', resp.data.token)\n            dispatch({\n                type: REGISTER_USER,\n                payload: {\n                    user: resp.data.user,\n                    token: resp.data.token,\n                    loader: false,\n                    message: 'Ваш вккаунт создан!',\n                    error: false\n                }\n            })\n        })\n        .catch(error => {\n            console.log(error.response)\n            dispatch({\n                type: REGISTER_USER,\n                payload: {\n                    user: null,\n                    token: null,\n                    loader: false,\n                    message: `Ошибка: ${error.response.status === 401 ? \"Такой Email уже используется\" : error.response.data.error}`,\n                    error: true\n                }\n            })\n        })\n}\n\nexport const login = (params: LoginParamsInterface) => async (dispatch: Dispatch<DispatchEvent<UserDispatchInterface>>) => {\n    await axios.post(`${BACKEND_API_URL}login`, {\n        email: params.email,\n        password: params.password,\n    })\n        .then((resp) => {\n            localStorage.setItem('token', resp.data.token)\n            dispatch({\n                type: LOGIN_USER,\n                payload: {\n                    user: resp.data.user,\n                    token: resp.data.token,\n                    loader: false,\n                    message: 'Добро пожаловать',\n                    error: false\n                }\n            })\n        })\n        .catch(error => {\n            dispatch({\n                type: LOGIN_USER,\n                payload: {\n                    user: null,\n                    token: null,\n                    loader: false,\n                    message: `Ошибка: Введены неверные данные`,\n                    error: true\n                }\n            })\n        })\n}\n\n\nexport const meQuery = () => async (dispatch: Dispatch<DispatchEvent<UserDispatchInterface | UserLoadingDispatchInterface>>) => {\n    dispatch({\n        type: LOADING_USER,\n        payload: {\n            loader: true,\n        }\n    })\n\n    if (localStorage.getItem('token')) {\n        await axios.get(`${BACKEND_API_URL}profile`, {\n            headers: {\n                \"Authorization\": `${localStorage.getItem('token')}`\n            }\n        })\n            .then((resp) => {\n                dispatch({\n                    type: ME_QUERY,\n                    payload: {\n                        user: resp.data.user,\n                        token: localStorage.getItem('token'),\n                        loader: false,\n                        message: '',\n                        error: false\n                    }\n                })\n            })\n            .catch(error => {\n                dispatch({\n                    type: ME_QUERY,\n                    payload: {\n                        user:  null,\n                        token: null,\n                        loader: false,\n                        message: 'Ваша сессия устарела пожэалуйста авторизуйтесь!!',\n                        error: true\n                    }\n                })\n            })\n    }\n\n    else {\n        dispatch({\n            type: LOADING_USER,\n            payload: {\n                loader: false,\n            }\n        })\n    }\n}\n\nexport const changeUserInfo = (params: CoachSettingsInterface) => async (dispatch: Dispatch<DispatchEvent<ChangeUserInfoDispatchInterface>>) => {\n    if (localStorage.getItem('token')) {\n        await axios.post(`${BACKEND_API_URL}change-user-info`, params,{\n            headers: {\n                \"Authorization\": `${localStorage.getItem('token')}`\n            },\n        })\n            .then((resp) => {\n                dispatch({\n                    type: CHANGE_USER_PROFILE,\n                    payload: {\n                        user: resp.data.user,\n                        message: `Ваши изменения сохранены`,\n                        error: false\n                    }\n                })\n            })\n            .catch(error => {\n                dispatch({\n                    type: CHANGE_USER_PROFILE,\n                    payload: {\n                        message: `Что-то пошло не так`,\n                        error: true\n                    }\n                })\n            })\n    }\n}\n\n\nexport const logOutUser = () =>  (dispatch: Dispatch<DispatchEvent<UserDispatchInterface>>) => {\n    localStorage.removeItem('token')\n    dispatch({\n        type: LOGOUT_USER,\n        payload: {\n            user: null,\n            token: null,\n            loader: false,\n            message: `Вы удачно покинули сессию`,\n            error: false\n        }\n    })\n}","// 1. Import the extendTheme function\r\nimport {mode} from '@chakra-ui/theme-tools';\r\nimport {extendTheme} from \"@chakra-ui/react\"\r\n\r\n// 2. Extend the theme to include custom colors, fonts, etc\r\n\r\nconst Block = {\r\n    // The styles all Cards have in common\r\n    baseStyle: (props: any) => ({\r\n        background: mode(\"#fff\", \"#131722\")(props),\r\n        color: mode(\"#1c273c\", \"#fff\")(props),\r\n        boxShadow: mode(\"0px 8px 25px #0508090F\", \"none\")(props)\r\n    }),\r\n    // Two variants: rounded and smooth\r\n    variants: {\r\n        empty: {\r\n            boxShadow: \"none\"\r\n        },\r\n        base: {\r\n            padding: 0,\r\n        },\r\n        rounded: {\r\n            padding: 6,\r\n            borderRadius: \".5rem\",\r\n            overflow: \"hidden\"\r\n        },\r\n        smooth: {\r\n            padding: 6,\r\n            borderRadius: \"base\",\r\n            boxShadow: \"md\",\r\n        },\r\n    },\r\n    // The default variant value\r\n    defaultProps: {\r\n        variant: \"base\",\r\n    },\r\n}\r\n\r\nconst chakraTheme = extendTheme({\r\n    styles: {\r\n        global: (props: any) => ({\r\n            body: {\r\n                fontFamily: \"body\",\r\n                color: mode(\"#000\", \"#fff\")(props),\r\n                lineHeight: \"base\",\r\n            },\r\n        }),\r\n        fonts: {\r\n            heading: \"Proxima Nova\",\r\n            body: \"Proxima Nova\",\r\n        },\r\n    },\r\n    components: {\r\n        Block\r\n    },\r\n});\r\n\r\n\r\nexport default chakraTheme","export const APP_CHANGE_LANGUAGE = \"APP_CHANGE_LANGUAGE\"","import {AppInterface} from \"../interfaces/app\";\r\nimport {DispatchEvent} from \"../redux\";\r\nimport {APP_CHANGE_LANGUAGE} from \"../types/app.types\";\r\n\r\nconst initialState = {\r\n  activeLang: \"ru\",\r\n  languages: [\r\n    {\r\n      lang: 'ru',\r\n      title: \"Русский\"\r\n    },\r\n    {\r\n      lang: 'en',\r\n      title: \"English\"\r\n    }\r\n  ]\r\n}\r\n\r\nexport const appReducer = (state:AppInterface = initialState, action:DispatchEvent<any>) => {\r\n  const {type, payload} = action\r\n  switch (type) {\r\n    case APP_CHANGE_LANGUAGE:\r\n      return {\r\n        ...state,\r\n        activeLang: payload.lang\r\n      }\r\n    default: return state\r\n  }\r\n}","import {DispatchEvent} from \"../redux\";\nimport {UserStateInterface} from \"../interfaces/user\";\nimport {CHANGE_USER_PROFILE, LOADING_USER, LOGIN_USER, LOGOUT_USER, ME_QUERY, REGISTER_USER} from \"../types/user.types\";\n\n\nconst initialState = {\n    user: null,\n    token: localStorage.getItem('token') || null,\n    loader: false,\n    error: false,\n    message: '',\n    renderCounter: 0\n} as UserStateInterface\n\nexport const userReducer = (state = initialState, action: DispatchEvent<any>) => {\n    const {type, payload} = action\n    switch (type) {\n        case REGISTER_USER:\n            return {\n                ...state,\n                user: payload.user,\n                token: payload.token,\n                loader: payload.loader,\n                error: payload.error,\n                message: payload.message,\n                renderCounter: ++state.renderCounter\n            }\n        case LOGIN_USER:\n            return {\n                ...state,\n                user: payload.user,\n                token: payload.token,\n                loader: payload.loader,\n                error: payload.error,\n                message: payload.message,\n                renderCounter: ++state.renderCounter\n            }\n        case ME_QUERY:\n            return {\n                ...state,\n                user: payload.user,\n                token: payload.token,\n                loader: payload.loader,\n                error: payload.error,\n                message: payload.message,\n                renderCounter: ++state.renderCounter\n            }\n        case CHANGE_USER_PROFILE:\n            return {\n                ...state,\n                user: payload.error ? state.user : payload.user,\n                error: payload.error,\n                message: payload.message,\n                renderCounter: ++state.renderCounter\n            }\n        case LOGOUT_USER:\n            return {\n                user: payload.user,\n                token: payload.token,\n                loader: payload.loader,\n                error: payload.error,\n                message: payload.message,\n                renderCounter: 0\n            }\n        case LOADING_USER:\n            return {\n                loader: payload.loader,\n                renderCounter: 0\n            }\n\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux'\r\nimport {appReducer} from \"./app.reducer\";\r\nimport {userReducer} from \"./user.reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    app: appReducer,\r\n    user: userReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n//styles\r\nimport './assets/styles/style.scss'\r\nimport {ChakraProvider} from '@chakra-ui/react';\r\nimport chakraTheme from \"./config/ChakraConfig\";\r\n\r\n//store\r\nimport {compose, applyMiddleware, createStore} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {Provider} from \"react-redux\";\r\nimport {rootReducer} from \"./store/reducers/root.reducer\";\r\n\r\n\r\nconst store = createStore(rootReducer, compose(\r\n    applyMiddleware(thunk),\r\n    composeWithDevTools()\r\n));\r\n\r\n\r\nconst wrapper =  <ChakraProvider theme={chakraTheme}>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </ChakraProvider>;\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        {wrapper}\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}